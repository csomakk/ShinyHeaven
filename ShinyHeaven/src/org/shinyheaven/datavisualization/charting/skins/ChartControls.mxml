<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		height.closed="16"
		width.closed="100%" width.opened="100%"
		initialize="setEventListeners(event)">
	
	<fx:Metadata>
		[HostComponent("org.shinyheaven.datavisualization.charting.LineChartUIControls")]
	</fx:Metadata>
	
	<s:states>
		<s:State name="closed" />
		<s:State name="opened" />
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			public static const STATE_OPENED:String = "opened";
			public static const STATE_CLOSED:String = "closed";
			
			private var closeTimer:Timer = new Timer(300, 1);
			
			private function handleStateChangeWithTimer(event:MouseEvent):void
			{
				switch(event.type)
				{
					case MouseEvent.ROLL_OUT:
					{
						closeTimer.start();
						break;
					}
						
					default:
					{
						closeTimer.stop();
						currentState = STATE_OPENED;
						break;
					}
				}
			}
			
			protected function setEventListeners(event:FlexEvent):void
			{
				addEventListener(MouseEvent.ROLL_OVER, handleStateChangeWithTimer);
				addEventListener(MouseEvent.ROLL_OUT, handleStateChangeWithTimer);
				closeTimer.addEventListener(TimerEvent.TIMER, handleCloseOnTime);
			}
			
			protected function handleCloseOnTime(event:Event):void
			{
				currentState = STATE_CLOSED;
			}
			
		]]>
	</fx:Script>
	
	
	<s:transitions>
		<s:Transition fromState="opened" toState="closed">
			<s:Sequence>
				<s:Fade duration="200" target="{averageForm}" />
				<s:RemoveAction target="{averageForm}" />
				<s:Resize duration="200" target="{this}"/>
			</s:Sequence>
		</s:Transition>
		<s:Transition fromState="closed" toState="opened">
			<s:Sequence>
				<s:Resize duration="200" target="{this}" />
				<s:AddAction target="{averageForm}" />
				<s:Fade duration="200" target="{averageForm}" />
			</s:Sequence>
		</s:Transition>
	</s:transitions>
	
	<s:Rect id="bg" top="0" right="0" bottom="10" left="0" >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:entries>
					<s:GradientEntry color="#F53682" />
					<s:GradientEntry color="#BF2160" />
				</s:entries>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Rect top="{height-10}" right="0" bottom="0" left="0" >
		<s:fill>
			<s:SolidColor alpha="0" />
		</s:fill>
	</s:Rect>
	
	<s:Form id="averageForm" includeIn="opened" width="100%" height="100%">
		<s:layout>
			<s:FormLayout gap="-14" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" />
		</s:layout>
		<s:FormHeading label="Moving average" />
		<s:FormItem label="Show moving average">
			<s:CheckBox id="isMovingAverage" />
		</s:FormItem>
		<s:FormItem label="Average window" enabled="{isMovingAverage.selected}">
			<s:HSlider id="movingAvrgWindow" minimum="2" maximum="40" value="20" stepSize="1" />
		</s:FormItem>
	</s:Form>
	
	<s:filters>
		<s:DropShadowFilter alpha=".4" distance="4" angle="90" blurX="0" blurY="6" />
	</s:filters>
	
</s:Skin>
